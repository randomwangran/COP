* yet another year

I notice you use the word "prolonged procrastination". Indeed, I used
to be that kind of person, but later on, I figure out that as long as
you are human, it is a nature instinct that everyone shares the same
thing. To become "a perfect/best" and shows our best to the rest of
the world. I am not saying that the idea is bad. The thing is that, I
later realize that no one is perfect, everything you think is perfect,
is only because you do not know too much about them. If you spend
considerably amount of time in study it, you will find out that there'
something wrong with that. As long as we are talking about human's
invention, the rule applied. For example, I once think the top journal
in my field should be perfect and should be error free, at least,
should be catch up by me because I am a newbie in the field. As you
could possibly image, I found a lots errors on those topest journel my
field. What I want to say is that, human makes mistake.

I am not saying that every mistake should be forgive. As long as,
someone is telling the truth, not intentionally make that mistake to
gain some benefits that s/he should not obtain, it is okay to make
mistake. The important thing, is to summarize those mistake from our
ignorance, and try our best not to make that mistake again. That's
it. Be honest with you, then the rest of things would be easy. Don't
underestimate the first part, the easiest person we can foo with is:
ourself. It takes a lot of effort be honest with myself.

I might wrong, if you find spending time on checking those grammar
kinda of stuff, just do it. My current idea is that we should not pay too
much attention on those stuff. Communication is more important. Life
is so short. Focus on the important thing.

I am not sure why you need to migrate them? Translation? If you
had the urge to write something stuff. Just write it down, turn
off the spelling checker, all those sort of things, and let
thoughts fly on the editor (in my case, my emacs, it's quit
enjoyable compare to other activities, at least in my
opinion). And if the grammar is critical to you, after a while,
go back, and correct those mistake. I am not sure this is a
efficient way to do what you want to achieve, but for me, it is
the solution to my current me.

For language issue, I used to push myself to write English, because I
think that I need to practice English as much as possible. But, I
change my mind when I feel that writing good English isn't the most
important thing as long as you could express you idea that other
people can understand.

I am really appreciating you could share those changes and update
during the lull? Wait, what is lull?

Ps. I check the dictionary:

"- A relaticely calm interval
- An interval of lessened activity"

* About This Blog

Speaking of blogging stuff. My journey started at around 2014 using
HEXO. At that time, I was very proud of making that website Indeed, my
major is civil engineering, making a website, using lots of git
commands, and being able to view my story on the Internet. This
process, it self, already made me cry. At that time, my little
achievement was huge motivation for me. And, more importantly, I
change my view on lots stuff. I begin think that I could do anything
if considerable amount of time being spending on whatever subject, as
long as it is not aging dependent stuff, like short spring running,
swimming ... (I later figure out that everybody has the same of this
kinda of potential.) People who do not achieve what they want, most
because of the not sufficient amount of energy focusing on the topic
he wants to master. My point is, I myself, is so lucky, I have a
family that support me. So, I could do whatever I want in my college
years and I was able to do this kind beyond a typical engineering
student supposed to do.

I do not know why you was unhappy with the satic nature of
Jekyll? Although, I am not a user of Jekyll, I use third part
service to help me to generate my current static blog, which is
okay for me. I also find a Jekyll user complains
about Jekyll not s/he's choice: and ask a try to Bitcron,
which is my current choice. I sent s/he an invitation link. Will
see her/is comments. S/he was invited by someelse. I guess its
the creator of Bitcron. But that's not important. I like this
blog and I already become a fan of her/im.

#+BEGIN_QUOTE
Unless I’ve missed something important, it is
impossible to “lock” any page or to render pages based on
authentication status on static GitHub Pages.
#+END_QUOTE

Not sure what you mean. Just curious about why you want to "lock" any
page? For manage code and content of the blog, I think it is totally
okay mixing them together. If what you concern with is that it can not
tell which commit is which, write a template or just make a rule to
mark them. Or, maybe, you want to "KISS"? Or, just had some headache
with those techniques stuff?

Talking about your experience with BAIDU! I share the same! I used to
be a user (more than 10 years) of it. But, when I was in college, I
did some arguments with a user in my collage pages. I didn't have any
bad intention to offense people, but at the end of the day, the
account was forbidden. I no longer can make any noise on that
platform. Similar things applied to some third parties: I even wrote a
blog to express my thoughts. I was really appreciated for GitHub
Pages. It not only gave me a tiny space on the Internet, but also open
my eyes towards a much bigger world. So many good people, so many
wonderful thoughts, so many amazing tools.

I never try WordPress, although I found a lots of blogs and websites
offering great contents (for example, the learning material of c++ for
me is this website ). But for me, I am very satisfied with the static
pages kinda blog. It's easy for me and provide enough control to me. I
learn from your blog that to "freely" use WordPress, user has to pay
fee to just get rid of the ads? Sounds like crazy to me. I use Adblock
on my Chrome. Even someone put ad their website, I cannot set it.

I nerver heard about React before. I checked their website. But I
don't know what is reactive system? Something opposite to the statics
one? The document of that website is really hard to understand for me.

I also search the wiki for Flask and I found this:
#+BEGIN_QUOTE
It came out of an April Fool's joke but proved popular enough to make into a serious application in its own right.
#+END_QUOTE
Haha, really cool. And I further go to this website. I tried to to
build "the denied", but I got the following message.

#+BEGIN_SRC python
Python 3.6.4 (v3.6.4:d48eceb, Dec 19 2017, 06:04:45) [MSC v.1900 32 bit (Intel)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> 
============ RESTART: C:\Users\user\Desktop\New folder\deny.py ============
Traceback (most recent call last):
File "C:\Users\user\Desktop\New folder\deny.py", line 1, in <module>
from deny import *
File "C:\Users\user\Desktop\New folder\deny.py", line 3, in <module>
@route('/')
NameError: name 'route' is not defined
>>>
#+END_SRC

Not sure what does this means:

#+BEGIN_QUOTE
No installation or configuration required. No dependencies other than the Python standard library
#+END_QUOTE

GraphQL: a open-source data query and manipulation language for API...
Sounds cool. But, why you website need such query system?

> However, because I learned most of
the frameworks on the fly and didn’t have a clear blueprint at
the beginning, the code was badly organized and didn’t follow a
good convention.

Do not worry, we are not serious guy, right? You mentioned you want to
change the license to
[GLWTPL](https://github.com/me-shaon/GLWTPL). That's how we
improve. What scripts you think is not necessary for your current
website? btw, what is "some other stuffs"? Text editor, or Operating
system? How big is your blog? I've checked my: 40k. Not sure how you
evalute the speed. If you want share, please let me Know.

I saw your blog using the google's analysing script.

#+BEGIN_SRC 
  <script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-71234164-1']);
  
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
#+END_SRC

I used to use that piece code to track how many people view my blog:
where are they from? But overtime, I feel that I was addictive to
it. I cannot control myself to constantly check the gooogle's
data. However, indeed, those number make no sense to me. As a blog,
the most imporant thing is to log my experience. How many people check
my website doesn't make a huge difference to me, so I stop using the
script. Maybe you have some other concerns, want to know you idea.

That's so cool to get a alerts from GitHub. What were `vulnerable
dependencies`? Why you do not have courage? You are a computer science
student, a master of computer science. If you want, I want to help you
to fix the bad code together (I am not a good programmer, it could take
years to finish).

I checked [[https://github.com/randomwangran/tracing/blob/55e050fb5ce2e024bb144aa7bbb300e861f921dd/public/index.html#L4-L23][the website]] you build from starch(scratch)? very cool. What
is multilingual UI texts? Do you mean that the user could drag
somthing into the broswer, just just like we do google image search?
What is your ideal blog? As far as I concerned, a blog is just a
log. I did something in my life and log the the stuff I've done. There
are there types of medium: text, picture, and video. Each of them have
pros and cons. Text is simple and fast, but some times it is hard to
make point easy understand, i.e. reaing [[https://wiki.archlinux.org/index.php/installation_guide][arch's wiki to install arch]] is
hard. If you watch the video on [[https://www.youtube.com/watch?v=lizdpoZj_vU][youtube]], it's much easy. Pictures are
my best friend, especially I need some info that need much visual
content. What's your current choice of server? (by reading the next
paragraph, I know you are using DigitalOcean)

#+BEGIN_QUOTE
However, with a self-hosting blog, I have to worry about maintaining
my own server, keeping it running, avoiding some security issues, and
a tons of other stuffs. There is also a small fee associate with the
deployments (for those who are interested, I’ve been using <a
href="https://www.digitalocean.com/">DigitalOcean</a>’s smallest
droplet which cost $5 per month and come with free DNS. I’ve also
tried <a href="https://aws.amazon.com/ec2/">Amazon EC2</a> that was
included as part of <a href="https://aws.amazon.com/free/">AWS Free
Tier</a>. Overall, AWS provides more options, yet it also requires
more configurations and its pricing system is a bit more
complicated). Besides, I enjoyed the feeling of having control at the
beginning, yet after several months, such excitement gradually faded
away, and I became tired of having to take care of everything on every
detail. So I shut down my server and began looking for other
alternative.
#+END_QUOTE

I don't have too much experience on maintaining stuff on my server,
although I've my virtual private service (VPS). What's kinda of security
issues have you met? What's tons of the other stuffs? Although I don't
use VPS to host my blog, it cost me $21.91 each year. I use it mainly
when I am back home. Currently, my static blog host on [[https://www.bitcron.com/][bitcron]], which
costs me 60 rmb, which is around $10 a year. I also have some bad
experience with AWS. They are so complicated for a newbiew. I can
understand what you mean by "tired of having to take care of
everything on every detail". Freedoom comes at cost. It's not saying
that someone should give up to the freedom. As far as I concerned, I
use [[https://github.com/kelseyhightower/nocode][nocode]] to develope the most critical stuff for myself. Anything
that is related to the security of my life, I use [[https://github.com/kelseyhightower/nocode][nocode]] to develope
them. From the current usage of it, I feel very good of using this
awsome project. On the other hand, anything I put on the Internet,
it's not directly related to my security. I am not saying that I 100%
confidence what I've done on the Internet will somehow has some bugs
that could be a dangerous to my life. That's the reason why I ask you
question: "how to damage my computer using your code?" That's a hard
question. I don't believe you have a answer to that. That' the reason
why I continue my journey to see the world of 0/1.


#+BEGIN_QUOTE
Eventually, I came back to Jekyll and GitHub Pages. I am finally tired
of re-inventing the wheels and figured that it is much better to use
tools designed by experts. In addition, it has almost been two years
since the last time I checked out Jekyll, which has evolved a lot over
time. For example, the ability to use remote_theme effectively resolve
the problem of mixing a blog’s content with codes that generates the
blog. Authentication is still an issue, though it is rather a minor
concern. So I re-organized my git repository for the blog, deleted
most of the style files, switched to remote_theme (still using the
Minimal Mistake Theme), and migrated all of the posts and Disqus
comments to this new domain yesterday (kudos to Disqus’s great
migration tool).
#+END_QUOTE

Now, I have bunch of options to build a static website:

[[https://gohugo.io/][HUGO]]: The world’s fastest framework for building websites
[[https://jekyllrb.com/][Jekyll]]: Transform your plain text into static websites and blogs.
[[https://hexo.io][HEXO]]: A fast, simple & powerful blog framework

Emm, everybody seems focus on the simplicity of building the blog.

Let's look at which one is the easiest?

- [[https://gohugo.io/getting-started/quick-start/][Huge use 6 steps]]
- [[https://gohugo.io/getting-started/quick-start/][Jekyll uses 4 commands]]
- [[https://hexo.io/][Hexo uses 5 commands]]

Emm, Jekyll wins! I start to love Jekyll, but what is ~Minimal Mistake
Theme~? I could not search any result on [[https://jekyllrb.com/resources/][this page]]. (I found[[https://mademistakes.com/work/minimal-mistakes-jekyll-theme/][ the link
at the bottom of your web]]) I read [[https://github.com/horizon-blue/horizon-blue.github.io][your blog]]. I notice you mention that
it is entry point. Do you know where I can find your remote_theme? I
[[https://github.com/horizon-blue/horizon-blue.github.io/tree/master/assets][found
the entry point of your blog is super good.]] How you did this magic?

* About Coding
#+BEGIN_QUOTE
It has been three and a half years since I written done my first hello
world program. A lot of things have changed during his period of time
– I learned to code with C++ 11 back in 2015 (though C++ 14 standard
had already been out at that time, it was relatively new and wasn’t
covered in the textbook I used); C++ 20 is under way now. I am not
going to talk about what has been happening in the community, as
that’s not my area of expertise. What I do know a bit is that the
meaning of coding to me has changed as well. My experience might not
be applicable to everybody, though to me this is still an interesting
story to look in retrospect.
#+END_QUOTE

What is the meaning of the coding? Speaking of c++ coding, I don't
know how to define "learning c++". As an engineering student, we had a
class called "c++ programming", which is a requirment for everyone in
my department. Although we "learned" a lot c++ coding, most of my
classmates, including myself, did not code single line in that
class. What our teacher asked us to do, was just to memorize those
complicated c++ grammer, which is not very effective way to program,
especially if I look back nowadays. I think the intention of my
university was good, it just they don't know there is a more effective
way to learn programming: by programming.

What is the meaning of programming? In my opinion, programming is
about automation. As a human, we are good at imagination, but you
know, without really implymenation, imagination is just
imagination. Computers are stuip yet super fast. If someone is good at
programming, he can then focus on his imagination, which is more
funny.

Speaking of the programming experience, I had a wonderful class in my
3rd year at my university. We had a class called FORTRAN programming,
which is an old programming lanuage in scientific domain. Having those
previous "programming" in my background, this class was indeed a hard
class for me ( indeed there are only few classed during my college
years, structure mechanics and this FROTRAN class ). They are hard, yet
hard to a degree such that I want to play with them. I still clearly
remember the joy when I first complile my FROTRAN code on
computer. Indeed, the code I wrote at that time sucks. For example:
#+BEGIN_SRC fortran
subroutine change
(p,q,AX,AY,BX,BY,AAX,AAY,BBX,BBY,CA,CB,DA,DB,EA,EB,FA,FB,GA,GB)
implicit none
real p,q,s,AX,AY,BX,BY,CX,CY,CA,CB,D,DA,DB,E,EA,EB,F,FA,FB,G,GA,GB,H
integer AAX,AAY,BBX,BBY,DDX,DDY
if (p>q)then
s=q
q=p
p=s
CX=BX
CY=BY
BX=AX
BY=AY
AX=CX
AY=CY
DDX=BBX
DDY=BBY
BBX=AAX
BBY=AAY
AAX=DDX
AAY=DDY
D=CB
CB=CA
CA=D
E=DB
DB=DA
DA=E
F=EB
EB=EA
EA=F
G=FB
FB=FA
FA=G
H=GB
GB=GA
GA=H
end if
END
#+END_SRC
What hack is this `change` function? But, that's not the point. The
most important thing this class was that I start to fall in love with
programming. I love immediate response from the computer: fail or
pass. Do I achieve what I want? Very simple and easy. This kind of
class is quite different from other classes that requiring extensive
memorization. 

Another class during my college life was structure
mechanics, which also highly related to computer at the very end of
the class. At begaining, we learned very basic things in engineering
mechanics, such as to calculate the deformation of a beam. It is an
essential courses for civil student, so everybody take it
seriously. But the most interesting part of this course, is actully at
very end of it: we use computers to calcute a very complex structure,
which is almost impossible for hand calculation. Actually, the method
we used is a very simplified numerical method called finite element
method. We build a matrix to representing a complicated structure and
let the computer to do the most tedious work. Indeed, the source code
was written in C programming language. Although we don't need to code
that software, I was indeeded shocked by the ability of
computer. I guess that it was from that time I start to want to learn
more about computer. 

The final thesis for my undergraduate was related
computational electromagnetism, which again nobody in my department
really interested in. Most of my student choosed geotechnical
engineering related projects, e.g., soil mechanics and rock
mechanics, but I just feel it was so cool to study the Maxwell's
equations. Later, when I could determine my career path during my
master program, I again choose computer related project, i.e., the
computational fluid mechanics. The time is really short for my
undergraduate thesis. To be honset with you, I did't really understand
what I was doing. But for the time during my master, I had a lot of
time study Navier-Stokes equaitons [[https://openfoam.org/][using computer]] to solve them.

During my master study, c++ is a black box to me. It's so simple. I
can do the hello world using c++ without any issue. But, at the same
time, c++ is so hard. What I know is that there are some people in
this world use c++ solving N.S. equation. I use the software written
by those genius c++ coder, and I found the result was not too bad
comparing to many experimental data. That deepen my love to
c++. It's hard, easy, and magic to me. That's the reason why I love to
learn c++. I don't have a very good plan to learn c++ at
begining. Indeed, I used [[https://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/][learning c++]] to learn it, but not very
consistent. Until I saw your [[https://github.com/horizon-blue/playground][c++ rep]]. Actually, the first time I came
to your blog is not because of c++. I was thinking about converted my
hhkb into a bluetooth version, and I google some keywords. I got to
your website, and story began...

#+BEGIN_QUOTE
It has been three and a half years since I written done my first hello
world program. A lot of things have changed during his period of time
– I learned to code with C++ 11 back in 2015 (though C++ 14 standard
had already been out at that time, it was relatively new and wasn’t
covered in the textbook I used); C++ 20 is under way now. I am not
going to talk about what has been happening in the community, as
that’s not my area of expertise. What I do know a bit is that the
meaning of coding to me has changed as well. My experience might not
be applicable to everybody, though to me this is still an interesting
story to look in retrospect.
#+END_QUOTE

That't the expert different from a newbiew like me. Although I've
learnt a lot of c++, I do not have a clear picture of the difference
between c++11,14, and 20. There's still a lot of work ahead of me. You
don't want to talk what's happening in the community. Just curious
about why. It's okay, if you don't, ignore this paragraph.

Different from you, I not a professional coder, so I don't have any
burden to learn the cutting edge technolgy. I still learning c++ every
single days. I used and enjoyed the c++ code, at the mean time, I
hoping one day I could understand what's going on in that black box.

#+BEGIN_QUOTE
When I first started coding (around Aug 2015, right before I entered
college), I put a heavy attention on the selection of programming
languages, tools, and the platforms. I literally Googled “what is the
best programming language” and read the comparisons post to
post. After selecting C++, I went on Googling “what is the best
software to write C++” (of course I had no idea what compilers or text
editors are), at which point some genius mentioned that it is best to
learn C++ on Linux, so I began another “what is the best Linux
distribution” search, installed CentOS, and found that my Wi-Fi was
dead because there was no pre-installed wireless driver (I talked a
bit about this in my previous post). After looping over the procedures
above for several days, I gave up Linux and finally settled on Emacs
with the compiler come with Visual Studio IDE (on Windows, don’t ask
me why). This had been my default set up for a while, until I
installed a Ubuntu virtual machine four months later (and switched to
Sublime Text after another year).
#+END_QUOTE

Do you still remember which posts mentioned "c++ is the best
programming language". Although, I don't think there is the best
language exists in this world. I would like to say their
arguments. Emm, I want to argue with the "genius" guys that it's not
too bad learning c++ on windows. M$'s VS is awsome! I love to write
c++ code on Windows machines. Indeed, nowadays, I still use VS to
write c++, although from a point of view of an emacs users, it's
suck. Emacers should use emacs to write c++, but I am not that good
right now. It's not saying that I would write c++ using VS forever, I
am learning emacs every single day hoping one day I could write big
c++ projects within emacs!

Things gettting interesting! Seems that you are an emacers!!!!!
#+BEGIN_QUOTE
This had been my default set up for a while, until I installed a
Ubuntu virtual machine four months later (and switched to Sublime Text
after another year).
#+END_QUOTE

But, wait, why you switched back to Sublime? I also use Sublime, it's
quite good. I sometimes use it to edit some Chinese blogs when my
default Chinese Editor not working good. Why you switch back to
Sublime? This is very interesting!

#+BEGIN_QUOTE
on windows, don't ask me why
#+END_QUOTE

Why? I use VS IDE with emacs kbd. Although it sucks, it works. When I
started the journey to code all the assignment on learning c++ code, I
mainly use IDE to write code, sometime I use VS code on my
Surface-pro (because I don't have courage to install it on SP).

#+BEGIN_QUOTE
In addition to the regular computer science curriculum, I had also
been reading C++ Primer, 5th edition. Overall I really like this book
as it covers everything in every detail – it not only teaches me how,
but also tells me why. Even though C++ 14 and C++ 17 are out, it is
probably still one of the best introductory C++ books. However, I am a
slow reader (especially in English), yet C++ Primer has more than 1k
pages. So I never really got a chance to finish the entire book
(though I did finish every exercise up to Chapter 14, and my solutions
to coding problem can be found in horizon-blue/playground).
#+END_QUOTE

Hey, forest, if you really enjoy coding c++ and finding something
interesting related to c++, just keep going like what you did. You
read it slow, but indeed it is fast. Someting that I kept thinking
when I watch this piece: [[https://www.youtube.com/watch?v=M93qXQWaBdE][Flight of the Bumblebee - Rimsky-Korsakov
(arr. Rachmaninoff)]] and one of the comments is really interesting to
me:

#+BEGIN_QUOTE
iF yOu CaN pLaY sLoW yOu CaN pLaY fAsT
#+END_QUOTE

(When I am writing this paragraphy, I listen to the same
[[https://www.youtube.com/watch?v=4VR-6AS0-l4][Ludovico Einaudi - Nuvole Bianche]]. Such a great piece.)

When I started to learn c++, I also found a lot of people recommand
this book. It should be a great book for most of people, but I just cannot
stick to it, until one day I found [[https://www.learncpp.com/][learning c++]]. That's not the best
if someone compares it to the C++ Primer. What makes different to me
is that I can acutually code with the instructions of the
blogger. It's not the best but it keeps my motivation to learn c++
every single day, which I think is more important than finding the
best.

#+BEGIN_QUOTE
C++ is pretty much the only language I used on my freshman year, after
which things began to change. The system programming course I was
taking was taught in C, yet only the first week of class was used to
cover some basic syntax of C. I finally began to realize that… perhaps
the language itself isn’t that important? I had taken the data
structure course before that (which was taught in C++), yet I failed
to realize that the focus is not just about how to use data structure
in C++. My theory was further confirmed by the algorithm course I was
taking at the same time, which didn’t even require a single line of
code throughout the semester (unless you count latex as a programming
language.)
#+END_QUOTE

I agree with you on "the language itself isn’t that
important". The reason why I still stick to c++ because I still use
the open-source code to numerically calculate solutions to
Navier-Stokes equation. The creator of [[https://openfoam.org/][that open-source project]] is still
actively developing it. To me, he is a hero. Nowadays, not many people
believe the power of open-source. The creator of OpenFOAM did this,
not only live upon what he created and enjoyed, but also offer many
master/phds/reserchers around the world a tool to analyse fluid
related issue.

* forest reply

#+BEGIN_QUOTE
WOW. I never thought anybody would bother to read my babbling
carefully and write a comment in such detail... thanks!
#+END_QUOTE
I just interested in the stuff you presented to the Internet and I
happened to read it.

#+BEGIN_QUOTE
Not sure whether I should post my reponses right now or wait till you
are done updating your comments ... Well, let me say something in
response first, then let's see what else you are going to ask lol
#+END_QUOTE

That's the reason why I invited you to read and respond on GitHub. I
recently read [[http://baohaojun.github.io/blog/2015/12/24/0-big-companys-and-small-companys-and-free-software-communities-source-code-management.html][a blog]]. I feel the exactly the same pain when I write
stuff to people.

If too much effort has been done by one people, the other people might
feel a huge budern on it, so the interaction will become more hard.

#+BEGIN_QUOTE
Yeah, I understand that I shouldn't be afraid of making mistakes... in
theory. However, it is still a challenge to persuade myself to do so
in practice lol. (Thanks for the suggestion about grammar checker;
though I don't have one on my text editor, I do have a basic spell
checker turned on)
#+END_QUOTE

I was wondering what's your are afraid. I might wrong. I do not afraid
of making mistake may have extremely cases where the fatal accidents
could occur. But, here, writing something to a friend, talking
something that we both interested in (I assumed you interested in what
you wrote in your blog. (If I were you, someone who want to talk to
me (for example, [[https://scholar.uwindsor.ca/etd/7584/][my thesis]], I would talk to him/her forever (because
the question is so hard yet so interesting to me)))). I asked a
five-year-old girl today about [[https://en.wikipedia.org/wiki/Navier-Stokes_equations][N.S.]] equation, which she was interested
in talking to me. I teach her some basic idea what's fluid is. Maybe,
it takes decades for her to understand what's the Navier–Stokes
equations really is. But it does't matter. As long as she keeps asking
me what is, I will try my best to explain to her. If you thinking this
is a waste of time, I would like to say: no, it is not. It's a mutual
process. To teach her, I also improve my understanding of
N.S. equation every single day. This is, in my opinion, fun. I would
like to listen to your idea about this kinda idea.

#+BEGIN_QUOTE
For lull I mean "an interval of lessened activity," though I'm not
sure whether this is the correct way to use the term. In fact I've
just picked up this word a few days prior to writing this post when
I was reading a friction and this term is used to describe a period
of silence during conversation.
#+END_QUOTE

I think this is a great example of the mutual benifits. I learned
something new from you. On the other hand, you deepen your
understanding of lull, which I believe you will use this more often
in future. That's why I love to talk to person like you. You honest
with what you create, and I am interested in what you present to the
world not necessary you. I think after my bad organization in Discuz,
there is a lull between us. Not sure, I already frigenten you and may
be you are not brave enough to read here.

#+BEGIN_QUOTE
I took a look at your blog (the archive that you linked to), and found
that civil engineering is much harder than computer science... what
you wrote in the other post makes me want to cry.
#+END_QUOTE

Why you think civil is hard than CS? Computer science is science,
while civil engineering is enginerring. Generally speaking, science is
harder than engineering. Becasue the later focus on the application
not the reason. Why you think this idea? Also, why you want to cry?
Which sentence you feel difference? Thanks for reading my old
blog. Same to you, I never thought someone could read it oneday. But,
why we do this. If we really do not want to let other people read our
story, why we put them on the Internet? I think, in our deepest part
of heart, we want somebody we care read the thoughts we have and the
experience we had. No one really like lonely, just do not want to be
disappointed.

#+BEGIN_QUOTE
For Jekyll, what I was looking for is the ability to set a password
on some of my post so that they are not accessible to everybody,
because I don't want to reveal the dark side of myself to the entire
world (lol). That's a minor concern as for now because I can put
that sort of stuffs on somewhere else instead of my blog here.
#+END_QUOTE

What is the dark side? If you do not want share it, it does not
mater. If you are talking about secret, my suggestion is that do type
those stuff on computers, even on the paper. (Just happen to read this "If you want to keep a secret, you must also hide it from yourself." from SS5). Computer is not 100%
security. You are a CS student, you know this much better than me. I
was wondering where you put that sort of things? If you do want to
share, just ignore it. It's totally okay.

#+BEGIN_QUOTE
React is a Javascript library - though it has its own syntax (JSX) and
uses ECMAScript (which is a "dialect" of Javascript) that needs to be
compile to vanilla Javascript in order to use on most of the
browser. Contrary to building website with HTML (or generating HTML
using server), website built by React has minimal HTML involved. All
you need is a single <div />, and when a website is loaded, the
browser loads the Javascript file and executes it to generate the rest
of the contents.
#+END_QUOTE

I know kinda know what React is. It's a javascript library. Similar to
the c++ library. For a complicated system, the library itself,
sometimes, become a lanuage. But at the end of the day, the code will
be compiled into a lanuage, i.e., 0/1, to be understood by machine. I
might naive about the point you mentioned about "website built by
React has minimal HTML involved". Why this happen? For example, the
very first web (1989 at CERN (by British scientist Tim Berners-Lee)) on the Internet:
#+BEGIN_SRC html

<html><head></head><body><header>
<title>http://info.cern.ch</title>
</header>

<h1>http://info.cern.ch - home of the first website</h1>
<p>From here you can:</p>
<ul>
<li><a href="http://info.cern.ch/hypertext/WWW/TheProject.html">Browse the first website</a></li>
<li><a href="http://line-mode.cern.ch/www/hypertext/WWW/TheProject.html">Browse the first website using the line-mode browser simulator</a></li>
<li><a href="http://home.web.cern.ch/topics/birth-web">Learn about the birth of the web</a></li>
<li><a href="http://home.web.cern.ch/about">Learn about CERN, the physics laboratory where the web was born</a></li>
</ul>
</body></html>
#+END_SRC

I later read the history of the first Internet. [[http://info.cern.ch/hypertext/WWW/Proposal.html][The proposal is quit
easy to follow.]]

But, how to achieve loading a website by using ~<div />~? From my
understanding from your description, it seems that that Javascript
file could generate the rest of the HTML file?


#+BEGIN_QUOTE
Flask definitely requires installation (I google the sentence you
quote and found the readme file here, which seems to be the precursor
of Flask. If that's something you want to build, at least you need to
import what you need from the bottle.py, i.e. from bottle import
send_file, redirect, abort.
#+END_QUOTE

"Flask definitely requires installation". But, It's quite different
from Flask's wiki page: "It is classified as a microframework because
it does not require particular tools or libraries" I revise the
[[https://en.wikipedia.org/w/index.php?title=Flask_(web_framework)&oldid=878646094][Flask's wiki page]]. Not 100% sure it is correct. Please correct or
improve the wiki page if you have better idea.[[https://www.youtube.com/watch?v=4VR-6AS0-l4][Ludovico Einaudi - Nuvole Bianche]]
