* what is the name?
  - Yes, it is called a bit.
  
  - Gate: name of the lights device.

  - And gate: I love computer people.
    
  - NANA gate: easy to understand.

  - NOT gate: result is not input.

  Yes, I can understand NAND gate!
* Diagrams

  when s is off, what will happen?

  I see the gates openning and closing but I cannot understand why the
  author say it is "memory"? When 's' is off, 'o' stays the way it
  was. How can this called memory? From my understanding, if there is
  nothing there, ( no wires or gates ), everytime a person observing
  the state of 'o', 'o' is still 'o'. Is this called memory? In my
  navive eye, memory is something one can pick...

  Wait, what is memory?

  I still don't understand hwo 4 ngates create a one bit memory.

  Let me summary what I've learn:

  When 's' is on, input determine output;
  When 's' is off, input cannot affect output;

  So, if you want to change the information in that bit, turn 's' on,
  do something that you know. Then turn 's' off, whatever the next
  input is, the output always stays what it was.

* A Rose by Any Other name

  Byte looks like a WUGONG.

* Codes
* More gate combinations
  The 'decoder' is hard to follow, but if you set back and look the
  overall structure of the system, I can understand what's going here:
  by reading the output, we now what's input.
* First half of the computer

  What's cubbyholes? It's a matrix that you can read one of hole each
  time.

  What's register? It's a combination of byte and enabler.

  For the lower part of the 16x16 grid, i.e., the bus, 's', and 'e'
  bit, what's their role? What's their functionality?
